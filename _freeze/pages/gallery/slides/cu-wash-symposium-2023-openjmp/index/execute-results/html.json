{
  "hash": "f8a280561607baac9722d17dc81dee36",
  "result": {
    "markdown": "---\ntitle: \"openjmp\"\nsubtitle: \"the data and code the behind the JMP WASH estimates\"\nauthor: \n  - name: Linda Karani\n    email: karanilinda@gmail.com\n  - name: Lars Schöbitz\n    email: lschoebitz@ethz.ch\ndate: 2023-03-10\ndate-format: long\nexecute: \n  cache: true\nformat: \n  revealjs:\n    pointer:\n      pointerSize: 22\n      color: '#5b195b' \n    theme: [default, \"slides.scss\"]\n    transition: fade\n    slide-number: true\n    chalkboard: \n      buttons: false\n    preview-links: auto  \nrevealjs-plugins:\n  - pointer\neditor: source\neditor_options: \n  chunk_output_type: console\nbibliography: openjmp.bib\n---\n\n::: {.cell hash='index_cache/html/unnamed-chunk-1_4e29295004061939293bd1a4e60abaea'}\n\n```{.r .cell-code}\nlibrary(tidyverse)\n```\n\n::: {.cell-output .cell-output-stderr}\n```\n── Attaching core tidyverse packages ──────────────────────── tidyverse 2.0.0 ──\n✔ dplyr     1.1.2     ✔ readr     2.1.4\n✔ forcats   1.0.0     ✔ stringr   1.5.0\n✔ ggplot2   3.4.2     ✔ tibble    3.2.1\n✔ lubridate 1.9.2     ✔ tidyr     1.3.0\n✔ purrr     1.0.1     \n── Conflicts ────────────────────────────────────────── tidyverse_conflicts() ──\n✖ dplyr::filter() masks stats::filter()\n✖ dplyr::lag()    masks stats::lag()\nℹ Use the conflicted package (<http://conflicted.r-lib.org/>) to force all conflicts to become errors\n```\n:::\n\n```{.r .cell-code}\nlibrary(maps)\n```\n\n::: {.cell-output .cell-output-stderr}\n```\n\nAttache Paket: 'maps'\n\nDas folgende Objekt ist maskiert 'package:purrr':\n\n    map\n```\n:::\n\n```{.r .cell-code}\nlibrary(tmap) \n```\n\n::: {.cell-output .cell-output-stderr}\n```\nThe legacy packages maptools, rgdal, and rgeos, underpinning the sp package,\nwhich was just loaded, will retire in October 2023.\nPlease refer to R-spatial evolution reports for details, especially\nhttps://r-spatial.org/r/2023/05/15/evolution4.html.\nIt may be desirable to make the sf package available;\npackage maintainers should consider adding sf to Suggests:.\nThe sp package is now running under evolution status 2\n     (status 2 uses the sf package in place of rgdal)\n```\n:::\n\n```{.r .cell-code}\nlibrary(sf)\n```\n\n::: {.cell-output .cell-output-stderr}\n```\nLinking to GEOS 3.11.2, GDAL 3.6.2, PROJ 9.2.0; sf_use_s2() is TRUE\n```\n:::\n\n```{.r .cell-code}\nlibrary(gt)\n```\n:::\n\n::: {.cell hash='index_cache/html/unnamed-chunk-2_edf6eac445480e90f378e4d3c0e8af73'}\n\n```{.r .cell-code}\n# Download rds file\ntemp_rds <- file.path(tempdir(), \"2022-10-19_jmp_sanitation_raw_data.rds\")\n\ndownload.file(\n    \"https://github.com/openwashdata/jmpinput/raw/master/data/derived_data/2022-10-19_jmp_sanitation_raw_data.rds\",\n    temp_rds\n)\n\n# import data\njmpraw <- read_rds(temp_rds) |>  \n    filter(year >= 2000, value >= 0) \n```\n:::\n\n::: {.cell hash='index_cache/html/unnamed-chunk-3_d5a1a693b7342ec03f626ed866c43387'}\n\n```{.r .cell-code}\n# top10 function\ntop10 <- function(data) {\n    data  |> \n        arrange(desc(n)) |> \n        head(10)  |> \n        mutate(country = countrycode::countrycode(iso3, origin = \"iso3c\", destination = \"country.name\")) |> \n        select(country, n)\n}\n\n# count iso3 and sanitation service chain function\n\ncount_iso3_ssc <- function(data, min_year, ssc) {\n    data |> \n        filter(year >= min_year) |> \n        filter(san_service_chain == ssc) |> \n        count(iso3, san_service_chain)\n}\n```\n:::\n\n::: {.cell hash='index_cache/html/unnamed-chunk-4_bd6393c23cb997a62b8ec7cf6a691708'}\n\n```{.r .cell-code}\njmp_iso3_frequency <- jmpraw |> \n    count(iso3)\n\njmp_iso3_user_interface_2015 <- count_iso3_ssc(jmpraw, min_year = 2015, ssc = \"user interface\")\n\njmp_iso3_emptying_2015 <- count_iso3_ssc(jmpraw, min_year = 2015, ssc = \"emptying\")\n\njmp_iso3_ww_treatment_2015 <- count_iso3_ssc(jmpraw, min_year = 2015, ssc = \"WW treatment\")\n\njmp_iso3_fs_treatment_2015 <- count_iso3_ssc(jmpraw, min_year = 2015, ssc = \"FS treatment\")\n```\n:::\n\n::: {.cell hash='index_cache/html/unnamed-chunk-5_737fd27805bd93902bbfcd64deaae34d'}\n\n```{.r .cell-code}\ndata(\"World\")\n\nworld_moll = st_transform(World, crs = \"+proj=moll\")\n\ntmap_mode(\"view\")\n```\n\n::: {.cell-output .cell-output-stderr}\n```\ntmap mode set to interactive viewing\n```\n:::\n\n```{.r .cell-code}\ntmap_options(basemaps = \"OpenStreetMap\")\n\ntmap_mode(\"plot\")\n```\n\n::: {.cell-output .cell-output-stderr}\n```\ntmap mode set to plotting\n```\n:::\n:::\n\n\n\n# openjmp - why? {background-color=\"#5b195b\"}\n\n<script defer data-domain=\"openwashdata.org\" src=\"https://plausible.io/js/script.js\"></script>\n\n\n\n```{=html}\n<script defer data-domain=\"openwashdata.org\" src=\"https://plausible.io/js/script.js\"></script>\n```\n\n\n## WHO/UNICEF Joint Monitoring Programme (JMP) \n\n::: incremental\n\n-   **JMP mandate:** internationally-comparable information on WASH since 1990\n-   **JMP data input:** raw database is updated every 2 years\n-   **JMP methods:** linear regression model with Stata 14.0\n-   **JMP data output:** 26 indicators for 232 countries, areas, and globally\n-   **JMP country files:** compile raw data input and data output for 26 indicators in spreadhsheet-based proprietary software\n\n:::\n\n## Current JMP workflow\n\n![](img/screenshot-jmp-methods-diagram.png)\n\n::: footer\n@who/unicefjointprogrammeforwatersupplysanitsationandhygienejmp2018jmp\n:::\n\n## Goals of openjmp project\n\n-   Document and publish R data package: `jmpinput`\n-   Document and publish R software package: `jmpmodel`\n-   Host half day online workshops to teach usage of developed packages in R\n-   Publish lessons as Open Educational Resources\n\n::: footer\nProposal: [openjmp - unlocking the potential of global indicator data](https://github.com/openwashdata/proposal-eth-ord-scheme-contribute/blob/main/proposal-eth-ord-scheme-contribute.md)\n:::\n\n# `jmpinput` {background-color=\"#5b195b\"}\n\n## `jmpinput` R data package - benefits\n\n::: incremental\n\n-   Data accessible as a single table for any data analysis tool\n-   Data can be imported to R using one command\n-   Public website with detailed documentation \\_ e.g. `washdata` R Package <https://katilingban.io/washdata/index.html>\n:::\n\n\n## `jmpinput` R data package - benefits\n\n-   Data accessible as a single table for any data analysis tool\n-   Data can be imported to R using one command\n-   Public website with detailed documentation \\_ e.g. `washdata` R Package <https://katilingban.io/washdata/index.html>\n\n![](img/screenshot-washdata-rpackage.png)\n\n::: footer\n@urban\n:::\n\n## `jmpinput` - sanitation {.smaller}\n\n-   Data in long format (19,528 rows)\n-   9 variables\n\n\n\n::: {.cell hash='index_cache/html/unnamed-chunk-6_61bcfc2430d557ba3d2253666c7d4fbe'}\n\n```{.r .cell-code}\njmpraw %>% \n    relocate(iso3) %>%\n    relocate(value, .after = san_service_chain) %>% \n    head(4) %>% \n    knitr::kable(digits = 1)\n```\n\n::: {.cell-output-display}\n|iso3 |source |type                  | year|var_short |var_long |residence |san_service_chain | value|\n|:----|:------|:---------------------|----:|:---------|:--------|:---------|:-----------------|-----:|\n|AFG  |MICS   |Survey                | 2003|s_imp_u   |Improved |urban     |user interface    |  44.2|\n|AFG  |NRVS   |Survey with microdata | 2005|s_imp_u   |Improved |urban     |user interface    |  62.3|\n|AFG  |NVRA   |Survey with microdata | 2008|s_imp_u   |Improved |urban     |user interface    |  58.3|\n|AFG  |MICS   |Survey with microdata | 2011|s_imp_u   |Improved |urban     |user interface    |  70.9|\n:::\n:::\n\n\n\n## `jmpinput` - new variables {.smaller}\n\n-   `residence`: urban/rural/national\n-   `san_service_chain`: sanitation service chain\n\n\n\n::: {.cell hash='index_cache/html/unnamed-chunk-7_e816fc99a39b99e2e247e424f291cd76'}\n\n```{.r .cell-code}\njmpraw %>% \n    count(san_service_chain) %>% \n    knitr::kable()\n```\n\n::: {.cell-output-display}\n|san_service_chain |     n|\n|:-----------------|-----:|\n|open defecation   |  2770|\n|sharing           |  1553|\n|user interface    | 12638|\n|containment       |   195|\n|emptying          |  1356|\n|transport         |    10|\n|FS treatment      |    85|\n|WW treatment      |   921|\n:::\n:::\n\n\n\n## `jmpinput` - use cases {.smaller auto-animate=\"true\"}\n\n::: incremental\n1.  Using JMP methods to reproduce estimates and apply different models - [Linda Karani - MSc Data Science](https://github.com/KaraniLinda/SDG-6-2-Reproducibility)\n2.  Writing the `jmpmodel` R software package with a function to produce estimates (and a function to produce service ladder plots)\n\n\n\n::: {.cell fenced='true' hash='index_cache/html/unnamed-chunk-8_582a6951fd43e31211f6df9717e4a662'}\n\n:::\n\n\n:::\n\n## `jmpinput` - use cases {.smaller auto-animate=\"true\"}\n\n1.  Using JMP methods to reproduce estimates and apply different models - [Linda Karani - MSc Data Science](https://github.com/KaraniLinda/SDG-6-2-Reproducibility)\n2.  Writing the `jmpmodel` R software package with a function to produce estimates (and a function to produce service ladder plots)\n\n\n\n::: {.cell fenced='true' hash='index_cache/html/unnamed-chunk-9_6adc6b96ad78621e058947024f049c37'}\n\n```{.r .cell-code}\nestimate(iso3 = \"AFG\",           # default: all iso3 codes\n         year = 2010:2030,       # Single year or range of years\n         var_short = NULL,       # default: all variables (NULL)\n         residence = \"national\") # default: national\n```\n:::\n\n\n\n## `jmpinput` - use cases {.smaller auto-animate=\"true\"}\n\n1.  Using JMP methods to reproduce estimates and apply different models - [Linda Karani - MSc Data Science](https://github.com/KaraniLinda/SDG-6-2-Reproducibility)\n2.  Writing the `jmpmodel` R software package with a function to produce estimates (and a function to produce service ladder plots)\n\n\n\n::: {.cell fenced='true' hash='index_cache/html/unnamed-chunk-10_5fa564bd1b8726002fc628c068efc774'}\n\n```{.r .cell-code}\nestimate(iso3 = \"AFG\",           # default: all iso3 codes\n         year = 2010:2030,       # Single year or range of years\n         var_short = NULL,       # default: all variables (NULL)\n         residence = \"national\") # default: national\n```\n:::\n\n\n\n3.  Great potential for unforeseen use cases enabled by making the data readily accessible (research, teaching, joining with other data, etc.)\n\n## \n\n\n\n::: {.cell hash='index_cache/html/unnamed-chunk-11_7bea6c494c3aca5bce2a8779ec26a0ea'}\n\n```{.r .cell-code}\njmpraw %>%\n    count(type, sort = TRUE) %>% \n    knitr::kable(caption = \"Number of data points for type of survey\")\n```\n\n::: {.cell-output-display}\nTable: Number of data points for type of survey\n\n|type                  |     n|\n|:---------------------|-----:|\n|Survey with microdata | 11149|\n|Admin                 |  3369|\n|Survey                |  3124|\n|Census                |  1732|\n|Other                 |   154|\n:::\n:::\n\n\n\n## \n\n\n\n::: {.cell hash='index_cache/html/unnamed-chunk-12_39007e5784ddcc5d5a7fe41604c17580'}\n\n```{.r .cell-code}\njmpraw %>% \n    filter(!is.na(san_service_chain)) %>% \n    count(year, san_service_chain) %>% \n    group_by(year) %>% \n    mutate(\n        prop = n / sum(n) * 100\n    ) %>%  \n    \n    ggplot(aes(x = year, y = prop, fill = san_service_chain)) +\n    geom_col() +\n    labs(\n        x = NULL,\n        y = NULL, \n        title = \"Proportion of data points along sanitation service chain\",\n        subtitle = \"For all countries since 2000\",\n        fill = \"Variable\"\n    ) +\n    scale_fill_brewer(palette = \"BrBG\") +\n    theme_minimal(base_size = 18) +\n    theme(panel.grid.minor = element_blank())\n```\n\n::: {.cell-output-display}\n![](index_files/figure-html/unnamed-chunk-12-1.png){width=672}\n:::\n:::\n\n\n\n## \n\n\n\n::: {.cell hash='index_cache/html/unnamed-chunk-13_7c6545931c774f858205d9d9111c355a'}\n\n```{.r .cell-code}\nworld_moll %>% \n    left_join(jmp_iso3_frequency, by = c(\"iso_a3\" = \"iso3\")) %>% \n    filter(continent != \"Antarctica\") %>% \n    tm_shape() +\n    tm_polygons(\n        col = \"n\", \n        title = \"No. of data points\",\n        #legend.hist = TRUE,\n        #palette = \"Oranges\", \n        style = \"fixed\",\n        contrast = c(0.1, 0.9),\n        breaks = c(1, 100, 250, 500),\n        #n = 4, \n        textNA = \"No Data\",\n        colorNA = \"grey80\", \n        lwd = 0.5\n    ) +\n    tm_layout(\n        main.title = \"JMP raw data collection - Total number of data points since 2000\",\n        main.title.position = \"center\",\n        title.position = c(\"left\", \"top\"),\n        #legend.outside = TRUE,\n        scale = 1.5,\n        #inner.margins = c(0, .02, .02, .02),\n        #outer.margins = c(0, 0, 0, 0), frame = TRUE, \n    )\n```\n\n::: {.cell-output-display}\n![](index_files/figure-html/unnamed-chunk-13-1.png){width=672}\n:::\n:::\n\n\n\n## \n\n\n\n::: {.cell hash='index_cache/html/unnamed-chunk-14_8d62b38e52c80454e4a2b7e9e44c8cd3'}\n\n```{.r .cell-code}\ntop10(jmp_iso3_frequency) %>% \n    knitr::kable()\n```\n\n::: {.cell-output-display}\n|country      |   n|\n|:------------|---:|\n|Peru         | 412|\n|Mexico       | 392|\n|Colombia     | 364|\n|Nigeria      | 332|\n|Brazil       | 304|\n|Costa Rica   | 302|\n|South Africa | 301|\n|Japan        | 278|\n|Uganda       | 265|\n|Bolivia      | 256|\n:::\n:::\n\n\n\n## \n\n\n\n::: {.cell hash='index_cache/html/unnamed-chunk-15_dca2762abeda25a54a674054beadc1b0'}\n\n```{.r .cell-code}\nworld_moll %>% \n    left_join(jmp_iso3_user_interface_2015, by = c(\"iso_a3\" = \"iso3\")) %>% \n    filter(continent != \"Antarctica\") %>% \n    tm_shape() +\n    tm_polygons(\n        col = \"n\", \n        title = \"No. of data points\",\n        #legend.hist = TRUE,\n        #palette = \"Oranges\", \n        style = \"fixed\",\n        contrast = c(0.1, 0.9),\n        breaks = c(1, 11, 21, 31),\n        #n = 4, \n        textNA = \"No Data\",\n        colorNA = \"grey80\", \n        lwd = 0.5\n    ) +\n    tm_layout(\n        main.title = \"JMP raw data collection - Number of data points for 'user interface' since 2015\",\n        main.title.position = \"center\",\n        title.position = c(\"left\", \"top\"),\n        #legend.outside = TRUE,\n        scale = 1.5,\n        #inner.margins = c(0, .02, .02, .02),\n        #outer.margins = c(0, 0, 0, 0), frame = TRUE, \n    ) \n```\n\n::: {.cell-output .cell-output-stderr}\n```\nWarning: Values have found that are higher than the highest break\n```\n:::\n\n::: {.cell-output-display}\n![](index_files/figure-html/unnamed-chunk-15-1.png){width=672}\n:::\n:::\n\n\n\n## \n\n\n\n::: {.cell hash='index_cache/html/unnamed-chunk-16_5056e47ef23750ac27139bd06af063c9'}\n\n```{.r .cell-code}\ntop10(jmp_iso3_user_interface_2015) %>% \n    knitr::kable()\n```\n\n::: {.cell-output-display}\n|country      |   n|\n|:------------|---:|\n|Peru         | 101|\n|Colombia     |  96|\n|Nigeria      |  80|\n|Mexico       |  79|\n|Ghana        |  62|\n|Uganda       |  62|\n|Costa Rica   |  56|\n|Guatemala    |  56|\n|South Africa |  52|\n|Bolivia      |  48|\n:::\n:::\n\n\n\n## \n\n\n\n::: {.cell hash='index_cache/html/unnamed-chunk-17_501c1b95ae0ce6e8227e75013edd580d'}\n\n```{.r .cell-code}\nworld_moll %>% \n    left_join(jmp_iso3_emptying_2015, by = c(\"iso_a3\" = \"iso3\")) %>% \n    filter(continent != \"Antarctica\") %>% \n    tm_shape() +\n    tm_polygons(\n        col = \"n\", \n        title = \"No. of data points\",\n        #legend.hist = TRUE,\n        #palette = \"Oranges\", \n        style = \"fixed\",\n        contrast = c(0.1, 1),\n        breaks = c(1, 11, 21, 31),\n        #n = 4, \n        textNA = \"No Data\",\n        colorNA = \"grey90\", \n        lwd = 0.5\n    ) +\n    tm_layout(\n        main.title = \"JMP raw data collection - Number of data points for 'emptying' since 2015\",\n        main.title.position = \"center\",\n        title.position = c(\"left\", \"top\"),\n        #legend.outside = TRUE,\n        scale = 1.5,\n        #inner.margins = c(0, .02, .02, .02),\n        #outer.margins = c(0, 0, 0, 0), frame = TRUE, \n    ) \n```\n\n::: {.cell-output .cell-output-stderr}\n```\nWarning: Values have found that are higher than the highest break\n```\n:::\n\n::: {.cell-output-display}\n![](index_files/figure-html/unnamed-chunk-17-1.png){width=672}\n:::\n:::\n\n\n\n## \n\n\n\n::: {.cell hash='index_cache/html/unnamed-chunk-18_b6c91e78db1dd368ea5a5de2c7fd5de3'}\n\n```{.r .cell-code}\ntop10(jmp_iso3_emptying_2015) %>% \n    knitr::kable()\n```\n\n::: {.cell-output-display}\n|country          |  n|\n|:----------------|--:|\n|Philippines      | 62|\n|Nigeria          | 48|\n|Bangladesh       | 40|\n|Japan            | 40|\n|South Korea      | 32|\n|Ethiopia         | 20|\n|Niger            | 20|\n|Belarus          | 16|\n|China            | 16|\n|Congo - Kinshasa | 16|\n:::\n:::\n\n\n\n## \n\n\n\n::: {.cell hash='index_cache/html/unnamed-chunk-19_858ae3365546eedbf23fd60e9dba0153'}\n\n```{.r .cell-code}\nworld_moll %>% \n    left_join(jmp_iso3_ww_treatment_2015, by = c(\"iso_a3\" = \"iso3\")) %>% \n    filter(continent != \"Antarctica\") %>% \n    tm_shape() +\n    tm_polygons(\n        col = \"n\", \n        title = \"No. of data points\",\n        #legend.hist = TRUE,\n        #palette = \"Oranges\", \n        style = \"fixed\",\n        contrast = c(0.1, 1),\n        breaks = c(1, 3, 6, 20),\n        #n = 4, \n        textNA = \"No Data\",\n        colorNA = \"grey90\", \n        lwd = 0.5\n    ) +\n    tm_layout(\n        main.title = \"JMP raw data collection - Number of data points for 'wastewater treatment' since 2015\",\n        main.title.position = \"center\",\n        title.position = c(\"left\", \"top\"),\n        #legend.outside = TRUE,\n        scale = 1.5,\n        #inner.margins = c(0, .02, .02, .02),\n        #outer.margins = c(0, 0, 0, 0), frame = TRUE, \n    )\n```\n\n::: {.cell-output-display}\n![](index_files/figure-html/unnamed-chunk-19-1.png){width=672}\n:::\n:::\n\n\n\n## \n\n\n\n::: {.cell hash='index_cache/html/unnamed-chunk-20_5181762864cb284e9413bfaf3ddac490'}\n\n```{.r .cell-code}\ntop10(jmp_iso3_ww_treatment_2015) %>% \n    knitr::kable()\n```\n\n::: {.cell-output-display}\n|country             |  n|\n|:-------------------|--:|\n|Chile               | 14|\n|Hong Kong SAR China | 10|\n|South Korea         |  8|\n|Macao SAR China     |  8|\n|Mauritius           |  8|\n|Norway              |  8|\n|Hungary             |  6|\n|Armenia             |  5|\n|Belgium             |  5|\n|Brazil              |  5|\n:::\n:::\n\n\n\n## \n\n\n\n::: {.cell hash='index_cache/html/unnamed-chunk-21_594b5f8b97fdfec3ecffb3b6e27fb82e'}\n\n```{.r .cell-code}\nworld_moll %>% \n    left_join(jmp_iso3_fs_treatment_2015, by = c(\"iso_a3\" = \"iso3\")) %>% \n    filter(continent != \"Antarctica\") %>% \n    tm_shape() +\n    tm_polygons(\n        col = \"n\", \n        title = \"No. of data points\",\n        #legend.hist = TRUE,\n        #palette = \"Oranges\", \n        style = \"fixed\",\n        contrast = c(0.1, 1),\n        breaks = c(1, 3, 6, 20),\n        #n = 4, \n        textNA = \"No Data\",\n        colorNA = \"grey90\", \n        lwd = 0.5\n    ) +\n    tm_layout(\n        main.title = \"JMP raw data collection - Number of data points for 'faecal sludge treatment' since 2015\",\n        main.title.position = \"center\",\n        title.position = c(\"left\", \"top\"),\n        #legend.outside = TRUE,\n        scale = 1.5,\n        #inner.margins = c(0, .02, .02, .02),\n        #outer.margins = c(0, 0, 0, 0), frame = TRUE, \n    )\n```\n\n::: {.cell-output-display}\n![](index_files/figure-html/unnamed-chunk-21-1.png){width=672}\n:::\n:::\n\n\n\n## \n\n\n\n::: {.cell hash='index_cache/html/unnamed-chunk-22_1652a79f35ba1eeb321003035f5c2c16'}\n\n```{.r .cell-code}\ntop10(jmp_iso3_fs_treatment_2015) %>% \n    knitr::kable()\n```\n\n::: {.cell-output-display}\n|country     |  n|\n|:-----------|--:|\n|South Korea |  8|\n|Lithuania   |  5|\n|Norway      |  5|\n|Japan       |  3|\n|Poland      |  3|\n|Bhutan      |  2|\n|Austria     |  1|\n|Finland     |  1|\n|Iceland     |  1|\n:::\n:::\n\n\n\n# openjmp - what's next? {background-color=\"#5b195b\"}\n\n## openjmp - what's next\n\n-   start of project: \\~ July/August 2023\n-   timeline and activities for `jmpinput` & `jmpmodel`: [Work Packages & Activities Google Sheet](https://docs.google.com/spreadsheets/d/1pvt08daECVK_M-IY3dx1lNUSjcTVy-8miE0GptWAIlc/edit#gid=0)\n-   stay up to date on progress and add requests: [openwashdata/jmpinput/issues](https://github.com/openwashdata/jmpinput/issues)\n- join openwasdata community: [openwashdata.org](https://openwashdata.org/)\n\n# Thanks! 🌻 {background-color=\"#5b195b\"}\n\n## Thanks 🌻\n\nThis project was supported by the [Open Research Data Program of the ETH Board](https://ethrat.ch/en/eth-domain/open-research-data/).\n\nThe slides were created via revealjs and Quarto: <https://quarto.org/docs/presentations/revealjs/>\n\nYou can [view source code of slides on GitHub](https://github.com/openwashdata/website/blob/main/pages/gallery/slides/cu-wash-symposium-2023-openjmp/index.qmd)\n\nOr you can [download slides in PDF format](https://github.com/openwashdata/website/raw/main/pages/gallery/slides/cu-wash-symposium-2023-openjmp/cu-wash-symposium-2023-openjmp-lkarani-lschoebitz.pdf)\n\nThis material is licensed under [Creative Commons Attribution Share Alike 4.0 International](https://creativecommons.org/licenses/by-sa/4.0/).\n\n# References\n",
    "supporting": [],
    "filters": [
      "rmarkdown/pagebreak.lua"
    ],
    "includes": {},
    "engineDependencies": {},
    "preserve": {},
    "postProcess": true
  }
}