{
  "hash": "da1cf2167ee1feb522b2a77b2fc30c8e",
  "result": {
    "markdown": "---\ntitle: \"openjmp\"\nsubtitle: \"the data and code the behind the JMP WASH estimates\"\nauthor: \n  - name: Linda Karani\n    email: karanilinda@gmail.com\n  - name: Lars Sch√∂bitz\n    email: lschoebitz@ethz.ch\ndate: 2023-03-10\ndate-format: long\nexecute: \n  cache: true\nformat: \n  revealjs:\n    pointer:\n      pointerSize: 22\n      color: '#5b195b' \n    theme: \"../slides.scss\"\n    transition: fade\n    slide-number: true\n    chalkboard: \n      buttons: false\n    preview-links: auto  \nrevealjs-plugins:\n  - pointer\neditor: source\neditor_options: \n  chunk_output_type: console\nbibliography: openjmp.bib\n---\n\n::: {.cell hash='index_cache/revealjs/unnamed-chunk-1_ea67bfd311154cb39692fb752d2e9c7a'}\n\n:::\n\n::: {.cell hash='index_cache/revealjs/unnamed-chunk-2_9d56010b4d937820a801dbce00191480'}\n\n:::\n\n::: {.cell hash='index_cache/revealjs/unnamed-chunk-3_6c9118a151e48a25f95c34d45ba769e5'}\n\n:::\n\n::: {.cell hash='index_cache/revealjs/unnamed-chunk-4_ddaddd611e5b4026fa46520191efa00c'}\n\n:::\n\n::: {.cell hash='index_cache/revealjs/unnamed-chunk-5_d428e49e23671539028d9f9bce628bce'}\n\n:::\n\n\n# openjmp - why? {background-color=\"#5b195b\"}\n\n<script defer data-domain=\"openwashdata.org\" src=\"https://plausible.io/js/script.js\"></script>\n\n\n```{=html}\n<script defer data-domain=\"openwashdata.org\" src=\"https://plausible.io/js/script.js\"></script>\n```\n\n## WHO/UNICEF Joint Monitoring Programme (JMP) \n\n::: incremental\n\n-   **JMP mandate:** internationally-comparable information on WASH since 1990\n-   **JMP data input:** raw database is updated every 2 years\n-   **JMP methods:** linear regression model with Stata 14.0\n-   **JMP data output:** 26 indicators for 232 countries, areas, and globally\n-   **JMP country files:** compile raw data input and data output for 26 indicators in spreadhsheet-based proprietary software\n\n:::\n\n## Current JMP workflow\n\n![](img/screenshot-jmp-methods-diagram.png)\n\n::: footer\n@who/unicefjointprogrammeforwatersupplysanitsationandhygienejmp2018jmp\n:::\n\n## Goals of openjmp project\n\n-   Document and publish R data package: `jmpinput`\n-   Document and publish R software package: `jmpmodel`\n-   Host half day online workshops to teach usage of developed packages in R\n-   Publish lessons as Open Educational Resources\n\n::: footer\nProposal: [openjmp - unlocking the potential of global indicator data](https://github.com/openwashdata/proposal-eth-ord-scheme-contribute/blob/main/proposal-eth-ord-scheme-contribute.md)\n:::\n\n# `jmpinput` {background-color=\"#5b195b\"}\n\n## `jmpinput` R data package - benefits\n\n::: incremental\n\n-   Data accessible as a single table for any data analysis tool\n-   Data can be imported to R using one command\n-   Public website with detailed documentation \\_ e.g. `washdata` R Package <https://katilingban.io/washdata/index.html>\n:::\n\n\n## `jmpinput` R data package - benefits\n\n-   Data accessible as a single table for any data analysis tool\n-   Data can be imported to R using one command\n-   Public website with detailed documentation \\_ e.g. `washdata` R Package <https://katilingban.io/washdata/index.html>\n\n![](img/screenshot-washdata-rpackage.png)\n\n::: footer\n@urban\n:::\n\n## `jmpinput` - sanitation {.smaller}\n\n-   Data in long format (19,528 rows)\n-   9 variables\n\n\n::: {.cell hash='index_cache/revealjs/unnamed-chunk-6_756fcbdc5ef38eb9fdb48b6ee12df02e'}\n::: {.cell-output-display}\n|iso3 |source |type                  | year|var_short |var_long |residence |san_service_chain | value|\n|:----|:------|:---------------------|----:|:---------|:--------|:---------|:-----------------|-----:|\n|AFG  |MICS   |Survey                | 2003|s_imp_u   |Improved |urban     |user interface    |  44.2|\n|AFG  |NRVS   |Survey with microdata | 2005|s_imp_u   |Improved |urban     |user interface    |  62.3|\n|AFG  |NVRA   |Survey with microdata | 2008|s_imp_u   |Improved |urban     |user interface    |  58.3|\n|AFG  |MICS   |Survey with microdata | 2011|s_imp_u   |Improved |urban     |user interface    |  70.9|\n:::\n:::\n\n\n## `jmpinput` - new variables {.smaller}\n\n-   `residence`: urban/rural/national\n-   `san_service_chain`: sanitation service chain\n\n\n::: {.cell hash='index_cache/revealjs/unnamed-chunk-7_3bbfb7ecba5b8a90868dfbea099831a7'}\n::: {.cell-output-display}\n|san_service_chain |     n|\n|:-----------------|-----:|\n|open defecation   |  2770|\n|sharing           |  1553|\n|user interface    | 12638|\n|containment       |   195|\n|emptying          |  1356|\n|transport         |    10|\n|FS treatment      |    85|\n|WW treatment      |   921|\n:::\n:::\n\n\n## `jmpinput` - use cases {.smaller auto-animate=\"true\"}\n\n::: incremental\n1.  Using JMP methods to reproduce estimates and apply different models - [Linda Karani - MSc Data Science](https://github.com/KaraniLinda/SDG-6-2-Reproducibility)\n2.  Writing the `jmpmodel` R software package with a function to produce estimates (and a function to produce service ladder plots)\n\n\n::: {.cell fenced='true' hash='index_cache/revealjs/unnamed-chunk-8_ac77b77b67cbbb57b167f1905438bf17'}\n\n:::\n\n:::\n\n## `jmpinput` - use cases {.smaller auto-animate=\"true\"}\n\n1.  Using JMP methods to reproduce estimates and apply different models - [Linda Karani - MSc Data Science](https://github.com/KaraniLinda/SDG-6-2-Reproducibility)\n2.  Writing the `jmpmodel` R software package with a function to produce estimates (and a function to produce service ladder plots)\n\n\n::: {.cell fenced='true' hash='index_cache/revealjs/unnamed-chunk-9_dba2d3a1eec074518ac6fa7c6243d347'}\n\n```{.r .cell-code}\nestimate(iso3 = \"AFG\",           # default: all iso3 codes\n         year = 2010:2030,       # Single year or range of years\n         var_short = NULL,       # default: all variables (NULL)\n         residence = \"national\") # default: national\n```\n:::\n\n\n## `jmpinput` - use cases {.smaller auto-animate=\"true\"}\n\n1.  Using JMP methods to reproduce estimates and apply different models - [Linda Karani - MSc Data Science](https://github.com/KaraniLinda/SDG-6-2-Reproducibility)\n2.  Writing the `jmpmodel` R software package with a function to produce estimates (and a function to produce service ladder plots)\n\n\n::: {.cell fenced='true' hash='index_cache/revealjs/unnamed-chunk-10_2bb77cf6fc5c18b56ddee00fa68c03f5'}\n\n```{.r .cell-code}\nestimate(iso3 = \"AFG\",           # default: all iso3 codes\n         year = 2010:2030,       # Single year or range of years\n         var_short = NULL,       # default: all variables (NULL)\n         residence = \"national\") # default: national\n```\n:::\n\n\n3.  Great potential for unforeseen use cases enabled by making the data readily accessible (research, teaching, joining with other data, etc.)\n\n## \n\n\n::: {.cell hash='index_cache/revealjs/unnamed-chunk-11_87c0932d3e8a39d4fca701d8674f15e1'}\n::: {.cell-output-display}\nTable: Number of data points for type of survey\n\n|type                  |     n|\n|:---------------------|-----:|\n|Survey with microdata | 11149|\n|Admin                 |  3369|\n|Survey                |  3124|\n|Census                |  1732|\n|Other                 |   154|\n:::\n:::\n\n\n## \n\n\n::: {.cell hash='index_cache/revealjs/unnamed-chunk-12_11e5c16ff71cc909c204b2b3ab1cd87f'}\n::: {.cell-output-display}\n![](index_files/figure-revealjs/unnamed-chunk-12-1.png){width=960}\n:::\n:::\n\n\n## \n\n\n::: {.cell hash='index_cache/revealjs/unnamed-chunk-13_d1f9d56e3b78672340860e1efea1dc48'}\n::: {.cell-output-display}\n![](index_files/figure-revealjs/unnamed-chunk-13-1.png){width=960}\n:::\n:::\n\n\n## \n\n\n::: {.cell hash='index_cache/revealjs/unnamed-chunk-14_b3b4c2af17e14e98bf0505cd77677b1a'}\n::: {.cell-output-display}\n|country      |   n|\n|:------------|---:|\n|Peru         | 412|\n|Mexico       | 392|\n|Colombia     | 364|\n|Nigeria      | 332|\n|Brazil       | 304|\n|Costa Rica   | 302|\n|South Africa | 301|\n|Japan        | 278|\n|Uganda       | 265|\n|Bolivia      | 256|\n:::\n:::\n\n\n## \n\n\n::: {.cell hash='index_cache/revealjs/unnamed-chunk-15_6a0ae8d2309dc369176ad9122bf096ed'}\n::: {.cell-output-display}\n![](index_files/figure-revealjs/unnamed-chunk-15-1.png){width=960}\n:::\n:::\n\n\n## \n\n\n::: {.cell hash='index_cache/revealjs/unnamed-chunk-16_86432f6c0e5f5a1973d4d924ae2b1c9c'}\n::: {.cell-output-display}\n|country      |   n|\n|:------------|---:|\n|Peru         | 101|\n|Colombia     |  96|\n|Nigeria      |  80|\n|Mexico       |  79|\n|Ghana        |  62|\n|Uganda       |  62|\n|Costa Rica   |  56|\n|Guatemala    |  56|\n|South Africa |  52|\n|Bolivia      |  48|\n:::\n:::\n\n\n## \n\n\n::: {.cell hash='index_cache/revealjs/unnamed-chunk-17_9e8bbf4b1b56027da43a835fdf541b87'}\n::: {.cell-output-display}\n![](index_files/figure-revealjs/unnamed-chunk-17-1.png){width=960}\n:::\n:::\n\n\n## \n\n\n::: {.cell hash='index_cache/revealjs/unnamed-chunk-18_d3541f302505876da6a17c95b58cffcf'}\n::: {.cell-output-display}\n|country          |  n|\n|:----------------|--:|\n|Philippines      | 62|\n|Nigeria          | 48|\n|Bangladesh       | 40|\n|Japan            | 40|\n|South Korea      | 32|\n|Ethiopia         | 20|\n|Niger            | 20|\n|Belarus          | 16|\n|China            | 16|\n|Congo - Kinshasa | 16|\n:::\n:::\n\n\n## \n\n\n::: {.cell hash='index_cache/revealjs/unnamed-chunk-19_6be56b5faac5aa1480145527213c48f3'}\n::: {.cell-output-display}\n![](index_files/figure-revealjs/unnamed-chunk-19-1.png){width=960}\n:::\n:::\n\n\n## \n\n\n::: {.cell hash='index_cache/revealjs/unnamed-chunk-20_7326e7322690a64f35252f0d41643b16'}\n::: {.cell-output-display}\n|country             |  n|\n|:-------------------|--:|\n|Chile               | 14|\n|Hong Kong SAR China | 10|\n|South Korea         |  8|\n|Macao SAR China     |  8|\n|Mauritius           |  8|\n|Norway              |  8|\n|Hungary             |  6|\n|Armenia             |  5|\n|Belgium             |  5|\n|Brazil              |  5|\n:::\n:::\n\n\n## \n\n\n::: {.cell hash='index_cache/revealjs/unnamed-chunk-21_4c409b339042d46eb2fc6e61a127154c'}\n::: {.cell-output-display}\n![](index_files/figure-revealjs/unnamed-chunk-21-1.png){width=960}\n:::\n:::\n\n\n## \n\n\n::: {.cell hash='index_cache/revealjs/unnamed-chunk-22_196467a82f3d082687fd9a2fc40b9834'}\n::: {.cell-output-display}\n|country     |  n|\n|:-----------|--:|\n|South Korea |  8|\n|Lithuania   |  5|\n|Norway      |  5|\n|Japan       |  3|\n|Poland      |  3|\n|Bhutan      |  2|\n|Austria     |  1|\n|Finland     |  1|\n|Iceland     |  1|\n:::\n:::\n\n\n# openjmp - what's next? {background-color=\"#5b195b\"}\n\n## openjmp - what's next\n\n-   start of project: \\~ July/August 2023\n-   timeline and activities for `jmpinput` & `jmpmodel`: [Work Packages & Activities Google Sheet](https://docs.google.com/spreadsheets/d/1pvt08daECVK_M-IY3dx1lNUSjcTVy-8miE0GptWAIlc/edit#gid=0)\n-   stay up to date on progress and add requests: [openwashdata/jmpinput/issues](https://github.com/openwashdata/jmpinput/issues)\n- join openwasdata community: [openwashdata.org](https://openwashdata.org/)\n\n# Thanks! üåª {background-color=\"#5b195b\"}\n\n## Thanks üåª\n\nThis project was supported by the [Open Research Data Program of the ETH Board](https://ethrat.ch/en/eth-domain/open-research-data/).\n\nThe slides were created via revealjs and Quarto: <https://quarto.org/docs/presentations/revealjs/>\n\nYou can [view source code of slides on GitHub](https://github.com/openwashdata/website/blob/main/pages/gallery/slides/cu-wash-symposium-2023-openjmp/index.qmd)\n\nOr you can [download slides in PDF format](https://github.com/openwashdata/website/raw/main/pages/gallery/slides/cu-wash-symposium-2023-openjmp/cu-wash-symposium-2023-openjmp-lkarani-lschoebitz.pdf)\n\nThis material is licensed under [Creative Commons Attribution Share Alike 4.0 International](https://creativecommons.org/licenses/by-sa/4.0/).\n\n# References\n",
    "supporting": [],
    "filters": [
      "rmarkdown/pagebreak.lua"
    ],
    "includes": {
      "include-after-body": [
        "\n<script>\n  // htmlwidgets need to know to resize themselves when slides are shown/hidden.\n  // Fire the \"slideenter\" event (handled by htmlwidgets.js) when the current\n  // slide changes (different for each slide format).\n  (function () {\n    // dispatch for htmlwidgets\n    function fireSlideEnter() {\n      const event = window.document.createEvent(\"Event\");\n      event.initEvent(\"slideenter\", true, true);\n      window.document.dispatchEvent(event);\n    }\n\n    function fireSlideChanged(previousSlide, currentSlide) {\n      fireSlideEnter();\n\n      // dispatch for shiny\n      if (window.jQuery) {\n        if (previousSlide) {\n          window.jQuery(previousSlide).trigger(\"hidden\");\n        }\n        if (currentSlide) {\n          window.jQuery(currentSlide).trigger(\"shown\");\n        }\n      }\n    }\n\n    // hookup for slidy\n    if (window.w3c_slidy) {\n      window.w3c_slidy.add_observer(function (slide_num) {\n        // slide_num starts at position 1\n        fireSlideChanged(null, w3c_slidy.slides[slide_num - 1]);\n      });\n    }\n\n  })();\n</script>\n\n"
      ]
    },
    "engineDependencies": {},
    "preserve": {},
    "postProcess": true
  }
}